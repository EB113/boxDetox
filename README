OSCP tool helper.

** Python 3.7+ Required **
#Setup guide#
apt install python3-pip
pip3 install -r requirements.txt

chmod +x oscpPWN
ln -sf {PATH}/oscpPWN /usr/bin/oscpPWN

./oscpPWN
or
./start {{proj_name}}

-------------------------------------
This tool intends to aid in exam by reducing painfull stuff.
This is not a problem solver tool.

Features:
	- Buffer Overflow Helper
	- Enumeration Automation Helper (Threaded):
		- SSH User enum;
		- SMTP VRFY + nmap scans (vuln,enum);
		- DNS rECON;
		- http dirsearch,nikto;
		- SNMP onesixtyone + nmap scans (vuln,enum)
		- 445 , smbmap,nbtscan, enum4linux, nmap (vuln,enum)
		- https same as http;
		- You can build your own modules following the standard structure of the above;
	- File Sharing Helper
	- Buckets/Notes to keep track of stuff; (ToDo)
	- Priv Esc Helper (notes only, ToDo)

The main goal is to allow the user to create their own enumeration by using python scripts.
Program is threaded so you can perform the above tasks simultaneously.
Program has a session awareness, all scans are stored in files/json on db/sessions/{{name}}.

Enumeration Automation:
Relevant Classes:
	- /src/moddule.py Module
	- /src/modules/portscan/portscanner.py Portscanner (Specfic type of Module)
	- /src/profiles/profiler.py Profiler
Relevant Files:
	- tcp.tpl 
	- udp.tpl
	(json structure to automate enumeration, user specifies a portscan module and specifies which modules run on specific ports. Modules only run if port is open. And it is a threaded application with the ability to limit)

Adding new Module:
 - Check /src/modules for module file structure examples.
 - Write your own;
 - Add module entry in src/menus/module.py switcher_module variable following the examples.

Data Filtering:
Global Cmds:
	- profiles (filters data from runned profiles, type "profiles help" for filter list, e.g profiles type=portscan)
	- modules (filters data from runned modules, type "modules help" for filter list, e.g modules type=regular)
	- services (filters data from runned portscan modules, either via manual or via tpl file, type "services help" for filter list, e.g services ip=127.0.0.1)
	- hosts (filters ips from global data, type "hosts help" e.g hosts module=Module_Ping)


WIP..

